generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model binh_luan {
  binh_luan_id   Int        @unique(map: "binh_luan_id") @default(autoincrement())
  nguoi_dung_id  Int
  hinh_id        Int
  ngay_binh_luan DateTime?  @db.Date
  noi_dung       String?    @db.VarChar(255)
  nguoi_dung     nguoi_dung @relation(fields: [nguoi_dung_id], references: [nguoi_dung_id], onDelete: Cascade, onUpdate: NoAction, map: "binh_luan_ibfk_1")
  hinh_anh       hinh_anh   @relation(fields: [hinh_id], references: [hinh_id], onDelete: Cascade, onUpdate: NoAction, map: "binh_luan_ibfk_2")
  phan_hoi       phan_hoi[]

  @@id([binh_luan_id, nguoi_dung_id, hinh_id])
  @@index([nguoi_dung_id], map: "binh_luan_ibfk_1")
  @@index([hinh_id], map: "binh_luan_ibfk_2")
}

model hinh_anh {
  hinh_id       Int         @id @default(autoincrement())
  tieu_de       String?     @db.VarChar(255)
  ten_hinh      String?     @db.VarChar(255)
  duong_dan     String?     @db.VarChar(255)
  mo_ta         String?     @db.VarChar(255)
  nguoi_dung_id Int?
  binh_luan     binh_luan[]
  nguoi_dung    nguoi_dung? @relation(fields: [nguoi_dung_id], references: [nguoi_dung_id], onDelete: Cascade, map: "hinh_anh_ibfk_1")
  luu_anh       luu_anh[]

  @@index([nguoi_dung_id], map: "nguoi_dung_id")
}

model luu_anh {
  luu_anh_id    Int         @id @unique(map: "luu_anh_id") @default(autoincrement())
  hinh_id       Int?
  nguoi_dung_id Int?
  ngay_luu      DateTime?   @db.Date
  nguoi_dung    nguoi_dung? @relation(fields: [nguoi_dung_id], references: [nguoi_dung_id], onDelete: Cascade, onUpdate: NoAction, map: "luu_anh_ibfk_1")
  hinh_anh      hinh_anh?   @relation(fields: [hinh_id], references: [hinh_id], onDelete: Cascade, onUpdate: NoAction, map: "luu_anh_ibfk_2")

  @@index([hinh_id], map: "hinh_id")
  @@index([nguoi_dung_id], map: "nguoi_dung_id")
}

model nguoi_dung {
  nguoi_dung_id                             Int         @id @default(autoincrement())
  email                                     String?     @db.VarChar(255)
  mat_khau                                  String?     @db.VarChar(255)
  ho_ten                                    String?     @db.VarChar(255)
  tuoi                                      String?     @db.VarChar(255)
  anh_dai_dien                              String?     @db.VarChar(255)
  binh_luan                                 binh_luan[]
  hinh_anh                                  hinh_anh[]
  luu_anh                                   luu_anh[]
  phan_hoi                                  phan_hoi[]
  theo_doi_theo_doi_follower_idTonguoi_dung theo_doi[]  @relation("theo_doi_follower_idTonguoi_dung")
  theo_doi_theo_doi_followee_idTonguoi_dung theo_doi[]  @relation("theo_doi_followee_idTonguoi_dung")
}

model phan_hoi {
  phan_hoi_id    Int        @unique(map: "phan_hoi_id") @default(autoincrement())
  nguoi_dung_id  Int
  binh_luan_id   Int
  ngay_binh_luan DateTime?  @db.Date
  noi_dung       String?    @db.VarChar(255)
  nguoi_dung     nguoi_dung @relation(fields: [nguoi_dung_id], references: [nguoi_dung_id], onDelete: Cascade, onUpdate: NoAction, map: "phan_hoi_ibfk_1")
  binh_luan      binh_luan  @relation(fields: [binh_luan_id], references: [binh_luan_id], onDelete: Cascade, onUpdate: NoAction, map: "phan_hoi_ibfk_2")

  @@id([binh_luan_id, nguoi_dung_id, phan_hoi_id])
  @@index([nguoi_dung_id], map: "phan_hoi_ibfk_1")
}

model theo_doi {
  follower_id                                 Int
  followee_id                                 Int
  nguoi_dung_theo_doi_follower_idTonguoi_dung nguoi_dung @relation("theo_doi_follower_idTonguoi_dung", fields: [follower_id], references: [nguoi_dung_id], onDelete: Cascade, onUpdate: NoAction, map: "theo_doi_ibfk_1")
  nguoi_dung_theo_doi_followee_idTonguoi_dung nguoi_dung @relation("theo_doi_followee_idTonguoi_dung", fields: [followee_id], references: [nguoi_dung_id], onDelete: Cascade, onUpdate: NoAction, map: "theo_doi_ibfk_2")

  @@id([follower_id, followee_id])
  @@index([followee_id], map: "theo_doi_ibfk_2")
}
